name: grafana-ijohnson
version: 5.0.4
summary: feature rich metrics dashboard and graph editor
description: |
  Grafana is a feature rich metrics dashboard and graph editor for Cloudwatch,
  Elasticsearch, Graphite, InfluxDB, OpenTSB, Prometheus, and Hosted Metrics.
confinement: strict
grade: stable

apps:
  grafana:
    command: 'bin/grafana.wrapper'
    plugs: [network-bind, network]
    daemon: simple

parts:
  clang:
    plugin: make
    source: clang
    build: |
        set -e
        wget -c http://releases.llvm.org/3.8.0/clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz
        tar -xf clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz -C $SNAPCRAFT_STAGE
    build-packages: [wget]
  phantomjs:
    after: [clang]
    plugin: python
    source: https://github.com/ariya/phantomjs.git
    source-type: git
    source-depth: 1
    source-tag: 2.1.3
    prepare: |
        git submodule init
        git submodule update
    build: |
        set -e
        # first recompile openssl
        cd src
        sed -i -e 's/# deb-src/deb-src/' /etc/apt/sources.list
        apt-get source openssl
        cd openssl-1.0.1t
        ./Configure --prefix=/usr --openssldir=/etc/ssl --libdir=lib ${OPENSSL_FLAGS} linux-generic64
        make -j $SNAPCRAFT_PARALLEL_BUILD_COUNT depend && make -j $SNAPCRAFT_PARALLEL_BUILD_COUNT && make install_sw
        cd ..
        # then recompile ICU in static mode
        apt-get source icu
        cd icu-52.1/source
        ./configure --prefix=/usr --enable-static --disable-shared
        make -j $SNAPCRAFT_PARALLEL_BUILD_COUNT && make install
        cd ../..
        # finally build phantomjs using clang instead of g++
        export CC=$SNAPCRAFT_STAGE/clang+llvm-3.8.0-aarch64-linux-gnu/bin/clang
        export CXX=$SNAPCRAFT_STAGE/clang+llvm-3.8.0-aarch64-linux-gnu/bin/clang++
        python build.py  --confirm --release --qt-config="-no-pkg-config" --git-clean-qtbase --git-clean-qtwebkit
    stage-packages:
      - build-essential
      - g++
      - flex
      - bison
      - gperf
      - ruby
      - perl
      - libsqlite3-dev
      - libfontconfig1-dev
      - libicu-dev
      - libfreetype6
      - libssl-dev 
      - libpng-dev
      - libjpeg-dev
      - python
      - libx11-dev
      - libxext-dev
  snap-wrappers:
    plugin: dump
    source: bin
    organize:
      grafana.wrapper: bin/grafana.wrapper
  go:
    source-tag: go1.9.3
    source-depth: 1
  grafana:
    after: [go, phantomjs]
    plugin: go
    source: https://github.com/grafana/grafana.git
    source-tag: v5.0.4
    source-depth: 1
    go-importpath: github.com/grafana/grafana
    build: |
        cd ../go/src/github.com/grafana/grafana
        go run build.go setup
        go run build.go build
    install: |
        mkdir $SNAPCRAFT_PART_INSTALL/bin $SNAPCRAFT_PART_INSTALL/conf
        cp -p $SNAPCRAFT_PART_INSTALL/../go/bin/grafana-server $SNAPCRAFT_PART_INSTALL/bin/
        cp -p $SNAPCRAFT_PART_INSTALL/../src/conf/defaults.ini $SNAPCRAFT_PART_INSTALL/conf/
  grafana-ui:
    after: [grafana, phantomjs]
    plugin: nodejs
    source-type: git
    source: https://github.com/grafana/grafana.git
    source-tag: v5.0.4
    node-engine: 6.11.4
    node-package-manager: yarn
    node-packages: [grunt]
    npm-run: [build]
    install: |
        cp -rf public $SNAPCRAFT_PART_INSTALL/public
